{"version":3,"file":"static/js/758.129741ce.chunk.js","mappings":"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","sources":["components/overview.js"],"sourcesContent":["import React, { useState, memo, useEffect } from 'react';\r\nimport '../App.scss';\r\n// import axios from 'axios';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport { GiSolarPower } from \"react-icons/gi\";\r\nimport { FaCarBattery, FaSolarPanel } from \"react-icons/fa\";\r\nimport { IoIosBulb } from \"react-icons/io\";\r\nimport { TbBulb } from \"react-icons/tb\";\r\nimport { BiCloud } from \"react-icons/bi\";\r\nimport { BsSunrise } from \"react-icons/bs\";\r\nimport { BsSunset } from \"react-icons/bs\";\r\nimport { IoBatteryCharging } from \"react-icons/io5\";\r\n\r\nfunction Overview(props, { setHumidityValue }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const data = props.selectedSL;\r\n  const sameDateData = props.sameDate;\r\n  const allData = props.allData;\r\n  const [sunrise, setSunrise] = useState('-');\r\n  const [sunset, setSunset] = useState('-');\r\n  const [temp, setTemp] = useState('-');\r\n  const [weather, setWeather] = useState('-');\r\n  const location = 'Las PiÃ±as, PH';\r\n\r\n  const [avgCharging, setAvgCharging] = useState(0);\r\n  const [avgON, setAvgON] = useState(0);\r\n\r\n  const devices = [\r\n    { list: 'SL1', value: 'SL1', label: 'Streetlight 1' },\r\n    { list: 'SL2', value: 'SL2', label: 'Streetlight 2' },\r\n    { list: 'SL3', value: 'SL3', label: 'Streetlight 3' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    callWeatherAPI();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    AvgCharging();\r\n    AvgON();\r\n  }, [allData]);\r\n\r\n  const callWeatherAPI = () => {\r\n    try {\r\n      setLoading(true);\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=14.4506&lon=120.9828&appid=a09978101e59b60cb76ea444b36760cc&units=metric`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // setFetchWeather(data);\r\n          setSunrise(formatTimestamp(data.sys.sunrise));\r\n          setSunset(formatTimestamp(data.sys.sunset));\r\n          setTemp(data.main.temp);\r\n          setWeather(data['weather'][0]['description']);\r\n        })\r\n        .catch(error => setError(error))\r\n        .finally(setLoading(false));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function formatTimestamp(timestamp) {\r\n    const date = new Date(timestamp * 1000);\r\n    const formattedTime = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\r\n    return formattedTime;\r\n  }\r\n\r\n  const GetEnergyYield = () => {\r\n    let energy = 0.0;\r\n    let totalEnergy = 0.0;\r\n    sameDateData.forEach(same => {\r\n      energy = energy + same.pv_power;\r\n    });\r\n    totalEnergy = (energy * 0.08333);\r\n    return (parseFloat(totalEnergy).toFixed(2));\r\n  }\r\n\r\n  const GetHighestYield = () => {\r\n    const byDateFilter = allData.reduce((acc, item) => {\r\n      const existingItem = acc.find((el) => el.date === item.date);\r\n      if (existingItem) {\r\n        existingItem.gen_power += parseFloat(item.pv_power) * 0.08333;\r\n      } else {\r\n        acc.push({ date: item.date, gen_power: item.pv_power * 0.08333 });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const highestYield = byDateFilter.reduce((acc, curr) => Math.max(acc, curr.gen_power), 0);\r\n    return (parseFloat(highestYield).toFixed(2));\r\n  }\r\n\r\n  const AvgCharging = () => {\r\n    const chargingTimePerDay = allData.reduce((acc, item, index, array) => {\r\n      if (item.charging === 1) {\r\n        const nextItem = array[index + 1];\r\n        if (nextItem && nextItem.date === item.date && (nextItem.charging === 1 || nextItem.charging === 0)) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          const end = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          const chargingTime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          const existingItem = acc.find((el) => el.date === item.date);\r\n          if (existingItem) {\r\n            existingItem.charging_time += chargingTime;\r\n          } else {\r\n            acc.push({ date: item.date, charging_time: chargingTime });\r\n          }\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const totalChargingTime = chargingTimePerDay.reduce((acc, curr) => acc + curr.charging_time, 0);\r\n    const averageChargingTime = totalChargingTime / chargingTimePerDay.length;\r\n\r\n    setAvgCharging(parseFloat(averageChargingTime).toFixed(2));\r\n  }\r\n\r\n  const AvgON = () => {\r\n    const OnTimePerDay = allData.reduce((acc, item, index, array) => {\r\n      if (item.led_status === 1) {\r\n        const nextItem = array[index + 1];\r\n        //check the item.time if 6PM onwards\r\n        let timeParts = item.time.split(\":\");\r\n        let hours = parseInt(timeParts[0]);\r\n\r\n        if (nextItem && nextItem.date === item.date && (nextItem.led_status === 1 || nextItem.led_status === 0)) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          const end = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          let ONtime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          if (nextItem.led_status === 0) {\r\n            ONtime = ONtime - (1 / 60);\r\n          }\r\n\r\n          if (hours >= 18) {\r\n            const existingItem = acc.find((el) => el.date === 'A-' + item.date);\r\n            if (existingItem) {\r\n              existingItem.on_time += ONtime;\r\n            } else {\r\n              acc.push({ date: 'A-' + item.date, on_time: ONtime });\r\n            }\r\n          }\r\n          if (hours <= 6) {\r\n            const existingItem = acc.find((el) => el.date === 'B-' + item.date);\r\n            if (existingItem) {\r\n              existingItem.on_time += ONtime;\r\n            } else {\r\n              acc.push({ date: 'B-' + item.date, on_time: ONtime });\r\n            }\r\n          }\r\n        }\r\n\r\n        if (nextItem && nextItem.date !== item.date && (nextItem.led_status === 1 || nextItem.led_status === 0)) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          const end = new Date(`${dateISO}T23:59:59Z`);\r\n          let ONtime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          if (nextItem.led_status === 0) {\r\n            ONtime = ONtime - (1 / 60);\r\n          }\r\n\r\n          const nextEnd = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          const nextStart = new Date(`${dateISO}T00:00:00Z`);\r\n          let nextONtime = (nextEnd - nextStart) / (1000 * 60 * 60); // convert milliseconds to hours\r\n\r\n          if (hours >= 18) {\r\n            const existingItem = acc.find((el) => el.date === 'A-' + item.date);\r\n            if (existingItem) {\r\n              existingItem.on_time += ONtime;\r\n            } else {\r\n              acc.push({ date: 'A-' + item.date, on_time: ONtime });\r\n            }\r\n            const nextExisting = acc.find((el) => el.date === 'B-' + nextItem.date);\r\n            if (nextExisting) {\r\n              existingItem.on_time += nextONtime;\r\n            } else {\r\n              acc.push({ date: 'B-' + nextItem.date, on_time: nextONtime });\r\n            }\r\n          }\r\n          if (hours <= 6) {\r\n            const existingItem = acc.find((el) => el.date === 'B-' + item.date);\r\n            if (existingItem) {\r\n              existingItem.on_time += ONtime;\r\n            } else {\r\n              acc.push({ date: 'B-' + item.date, on_time: ONtime });\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    // const totalOnTime = OnTimePerDay.reduce((acc, curr) => acc + curr.on_time, 0);\r\n    // const averageOnTime = totalOnTime / OnTimePerDay.length;\r\n\r\n    // console.table(OnTimePerDay);\r\n\r\n    // setAvgON(parseFloat(averageOnTime).toFixed(2))\r\n\r\n    // Filter A and B dates and calculate the sum\r\n    const sumABDates = OnTimePerDay.reduce((acc, item, index, array) => {\r\n      let sumDate = item.date;\r\n      if (sumDate.startsWith(\"A\")) {\r\n        let nextSumDate = array[index + 1];\r\n        // let nextDate = nextSumDate.date;\r\n        if (nextSumDate && nextSumDate.date.startsWith(\"B\")) {\r\n          const existingItem = acc.find((el) => el.date === item.date);\r\n          if (existingItem) {\r\n            existingItem.on_time = item.on_time + nextSumDate.on_time;\r\n          } else {\r\n            acc.push({ date: sumDate, on_time: item.on_time + nextSumDate.on_time });\r\n          }\r\n        } else {\r\n          // const existingItem = acc.find((el) => el.date === item.date);\r\n          // if (existingItem) {\r\n          //   existingItem.on_time = item.on_time;\r\n          // } else {\r\n          //   acc.push({ date: sumDate, on_time: item.on_time });\r\n          // }\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const totalOnTime = sumABDates.reduce((acc, curr) => acc + curr.on_time, 0);\r\n\r\n    // Calculate the average\r\n    const averageABDates = totalOnTime / sumABDates.length;\r\n\r\n    // console.table(sumABDates);\r\n    // console.log(\"Sum of A and B dates:\", sumABDates);\r\n    // console.log(\"Average of A and B dates:\", averageABDates);\r\n\r\n    setAvgON(parseFloat(averageABDates).toFixed(2));\r\n  }\r\n\r\n  return (\r\n    <div className='overview-container'>\r\n      {loading ? <ReactLoading type={'spokes'} color={'#0f1b2a'} height={550} width={375} className='loading-api' /> : ''}\r\n      <div className=''>\r\n        <h3 className='my-0'>System Overview</h3>\r\n      </div>\r\n\r\n      <div className='overview-container-wrapper'>\r\n        {/** Left side of the screen section*/}\r\n        <div className='sl-overview-container'>\r\n\r\n          <div className='sl-wrapper mb-3'>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaSolarPanel className='sl-icon' />\r\n                <h3>{GetEnergyYield()}Wh</h3>\r\n                <p>Today's Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <GiSolarPower className='sl-icon' />\r\n                <h3>{GetHighestYield()}Wh</h3>\r\n                <p>Highest Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaCarBattery className='sl-icon' />\r\n                <h3>{data.battCapacity.split(' ')[1]}</h3>\r\n                <p>Battery Capacity</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoBatteryCharging className='sl-icon' />\r\n                <h3>{isNaN(avgCharging) ? 0.00 : avgCharging}hr</h3>\r\n                <p>Avg. Charging Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <TbBulb className='sl-icon' />\r\n                <h3>{isNaN(avgON) ? 0.00 : avgON}hr</h3>\r\n                <p>Avg. ON Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoIosBulb className='sl-icon' />\r\n                <h3>{data.lamp}</h3>\r\n                <p>LED Lamp</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** Right side of the screen section*/}\r\n\r\n        <div className='sl-temp-container'>\r\n          {/** Details for temp and time section*/}\r\n          <div className='sl-wrapper'>\r\n            <div className='weather-wrapper'>\r\n              <div className='icon-wrapper'>\r\n                <BiCloud className='weather-icon' />\r\n              </div>\r\n\r\n              <div className='temp-container'>\r\n                <h2 className='temp-value'>{temp}Â°C</h2>\r\n                <h2 className='device-title'>{location}</h2>\r\n                <h6><i>{weather}</i></h6>\r\n                {/* <p>{location}</p> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='weather-container'>\r\n              <div className=\"overview-content-container sunrise-container\">\r\n                <div className=\"content-wrap\">\r\n                  <div className=\"icon-wrapper\">\r\n                    <BsSunrise className=\"s-icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-wrap\">\r\n                  <h2 className=\"sunrise-value\">{sunrise}</h2>\r\n                  <h6 className='gmt'>(GMT+8)</h6>\r\n                  <p>Sunrise</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"overview-content-container sunset-container\">\r\n                <div className=\"content-wrap\">\r\n                  <div className=\"icon-wrapper\">\r\n                    <BsSunset className=\"s-icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-wrap\">\r\n                  <h2 className=\"sunset-value\">{sunset}</h2>\r\n                  <h6 className='gmt'>(GMT+8)</h6>\r\n                  <p>Sunset</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/** Details for devices and location section*/}\r\n          <div className='dv-container'>\r\n            <div>\r\n              <h2 className='device-title'>Location</h2>\r\n              <p className='location-txt'>{data.location}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Overview);"],"names":["Overview","props","setHumidityValue","useState","loading","setLoading","setError","data","selectedSL","sameDateData","sameDate","allData","sunrise","setSunrise","sunset","setSunset","temp","setTemp","weather","setWeather","avgCharging","setAvgCharging","avgON","setAvgON","useEffect","callWeatherAPI","AvgCharging","AvgON","fetch","then","response","json","formatTimestamp","sys","main","catch","error","finally","console","timestamp","Date","toLocaleTimeString","hour","minute","chargingTimePerDay","reduce","acc","item","index","array","charging","nextItem","date","dateISO","toISOString","split","start","time","chargingTime","existingItem","find","el","charging_time","push","averageChargingTime","curr","length","parseFloat","toFixed","sumABDates","led_status","timeParts","hours","parseInt","ONtime","on_time","nextONtime","sumDate","startsWith","nextSumDate","averageABDates","className","type","color","height","width","energy","forEach","same","pv_power","GetEnergyYield","highestYield","gen_power","Math","max","GetHighestYield","battCapacity","isNaN","lamp","location","memo"],"sourceRoot":""}