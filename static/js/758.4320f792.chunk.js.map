{"version":3,"file":"static/js/758.4320f792.chunk.js","mappings":"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","sources":["components/overview.js"],"sourcesContent":["import React, { useState, memo, useEffect } from 'react';\r\nimport '../App.scss';\r\n// import axios from 'axios';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport { GiSolarPower } from \"react-icons/gi\";\r\nimport { FaCarBattery, FaSolarPanel } from \"react-icons/fa\";\r\nimport { IoIosBulb } from \"react-icons/io\";\r\nimport { TbBulb } from \"react-icons/tb\";\r\nimport { BiCloud } from \"react-icons/bi\";\r\nimport { BsSunrise } from \"react-icons/bs\";\r\nimport { BsSunset } from \"react-icons/bs\";\r\nimport { IoBatteryCharging } from \"react-icons/io5\";\r\n\r\nfunction Overview(props, { setHumidityValue }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const data = props.selectedSL;\r\n  const sameDateData = props.sameDate;\r\n  const allData = props.allData;\r\n  const [sunrise, setSunrise] = useState('-');\r\n  const [sunset, setSunset] = useState('-');\r\n  const [temp, setTemp] = useState('-');\r\n  const [weather, setWeather] = useState('-');\r\n  const location = 'Las Piñas, PH';\r\n\r\n  const devices = [\r\n    { list: 'SL1', value: 'SL1', label: 'Streetlight 1' },\r\n    { list: 'SL2', value: 'SL2', label: 'Streetlight 2' },\r\n    { list: 'SL3', value: 'SL3', label: 'Streetlight 3' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    callWeatherAPI();\r\n  }, []);\r\n\r\n  const callWeatherAPI = () => {\r\n    console.log('Fetching Weather Data');\r\n    try {\r\n      setLoading(true);\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=14.4506&lon=120.9828&appid=a09978101e59b60cb76ea444b36760cc&units=metric`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // setFetchWeather(data);\r\n          setSunrise(formatTimestamp(data.sys.sunrise));\r\n          setSunset(formatTimestamp(data.sys.sunset));\r\n          setTemp(data.main.temp);\r\n          setWeather(data['weather'][0]['description']);\r\n        })\r\n        .catch(error => setError(error))\r\n        .finally(setLoading(false));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function formatTimestamp(timestamp) {\r\n    const date = new Date(timestamp * 1000);\r\n    const formattedTime = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\r\n    return formattedTime;\r\n  }\r\n\r\n  const GetEnergyYield = () => {\r\n    let energy = 0.0;\r\n    let totalEnergy = 0.0;\r\n    sameDateData.forEach(same => {\r\n      energy = energy + same.pv_power;\r\n    });\r\n    totalEnergy = (energy * 0.16667);\r\n    return (parseFloat(totalEnergy).toFixed(2));\r\n  }\r\n\r\n  const GetHighestYield = () => {\r\n    const byDateFilter = allData.reduce((acc, item) => {\r\n      const existingItem = acc.find((el) => el.date === item.date);\r\n      if (existingItem) {\r\n        existingItem.gen_power += parseFloat(item.pv_power) * 0.16667;\r\n      } else {\r\n        acc.push({ date: item.date, gen_power: item.pv_power * 0.16667 });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const highestYield = byDateFilter.reduce((acc, curr) => Math.max(acc, curr.gen_power), Number.NEGATIVE_INFINITY);\r\n    return (parseFloat(highestYield).toFixed(2));\r\n  }\r\n\r\n  return (\r\n    <div className='overview-container'>\r\n      {loading ? <ReactLoading type={'spokes'} color={'#0f1b2a'} height={550} width={375} className='loading-api' /> : ''}\r\n      <div className=''>\r\n        <h3 className='my-0'>System Overview</h3>\r\n      </div>\r\n\r\n      <div className='overview-container-wrapper'>\r\n        {/** Left side of the screen section*/}\r\n        <div className='sl-overview-container'>\r\n\r\n          <div className='sl-wrapper mb-3'>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaSolarPanel className='sl-icon' />\r\n                <h3>{GetEnergyYield()}Wh</h3>\r\n                <p>Current Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <GiSolarPower className='sl-icon' />\r\n                <h3>{GetHighestYield()}Wh</h3>\r\n                <p>Highest Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaCarBattery className='sl-icon' />\r\n                <h3>{data.battCapacity}</h3>\r\n                <p>Battery Capacity</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='sl-wrapper'>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoBatteryCharging className='sl-icon' />\r\n                <h3>{GetHighestYield()}hr</h3>\r\n                <p>Avg. Charging Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <TbBulb className='sl-icon' />\r\n                <h3>{GetHighestYield()}hr</h3>\r\n                <p>Avg. ON Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoIosBulb className='sl-icon' />\r\n                <h3>{data.lamp}</h3>\r\n                <p>LED Lamp</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** Right side of the screen section*/}\r\n\r\n        <div className='sl-temp-container'>\r\n          {/** Details for temp and time section*/}\r\n          <div className='sl-wrapper'>\r\n            <div className='weather-wrapper'>\r\n              <div className='icon-wrapper'>\r\n                <BiCloud className='weather-icon' />\r\n              </div>\r\n\r\n\r\n              <div className='temp-container'>\r\n                <h3 className='temp-value'>{temp}°C</h3>\r\n                <h5 className='device-title'>{location}</h5>\r\n                <p><i>{weather}</i></p>\r\n                {/* <p>{location}</p> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='weather-container'>\r\n              <div className=\"content-container sunrise-container\">\r\n                <div className=\"content-wrap\">\r\n                  <div className=\"icon-wrapper\">\r\n                    <BsSunrise className=\"s-icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-wrap\">\r\n                  <h5 className=\"sunrise-value\">{sunrise}</h5>\r\n                  <h6>(GMT+8)</h6>\r\n                  <p>Sunrise</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"content-container sunset-container\">\r\n                <div className=\"content-wrap\">\r\n                  <div className=\"icon-wrapper\">\r\n                    <BsSunset className=\"s-icon\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"content-wrap\">\r\n                  <h5 className=\"sunset-value\">{sunset}</h5>\r\n                  <h6>(GMT+8)</h6>\r\n                  <p>Sunset</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/** Details for devices and location section*/}\r\n          <div className='dv-container'>\r\n            <div>\r\n              <h2 className='device-title'>Location</h2>\r\n              <p className='location-txt'>{data.location}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Overview);"],"names":["Overview","props","setHumidityValue","useState","loading","setLoading","setError","data","selectedSL","sameDateData","sameDate","allData","sunrise","setSunrise","sunset","setSunset","temp","setTemp","weather","setWeather","useEffect","callWeatherAPI","console","log","fetch","then","response","json","formatTimestamp","sys","main","catch","error","finally","timestamp","Date","toLocaleTimeString","hour","minute","GetHighestYield","highestYield","reduce","acc","item","existingItem","find","el","date","gen_power","parseFloat","pv_power","push","curr","Math","max","Number","NEGATIVE_INFINITY","toFixed","className","type","color","height","width","energy","forEach","same","GetEnergyYield","battCapacity","lamp","location","memo"],"sourceRoot":""}