{"version":3,"file":"static/js/758.872350d0.chunk.js","mappings":"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","sources":["components/overview.js"],"sourcesContent":["import React, { useState, memo, useEffect } from 'react';\r\nimport '../App.scss';\r\n// import axios from 'axios';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport { GiSolarPower } from \"react-icons/gi\";\r\nimport { FaCarBattery, FaSolarPanel } from \"react-icons/fa\";\r\nimport { IoIosBulb } from \"react-icons/io\";\r\nimport { TbBulb } from \"react-icons/tb\";\r\nimport { BiCloud } from \"react-icons/bi\";\r\nimport { BsSunrise } from \"react-icons/bs\";\r\nimport { BsSunset } from \"react-icons/bs\";\r\nimport { IoBatteryCharging } from \"react-icons/io5\";\r\n\r\nfunction Overview(props, { setHumidityValue }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const data = props.selectedSL;\r\n  const sameDateData = props.sameDate;\r\n  const allData = props.allData;\r\n  const [sunrise, setSunrise] = useState('-');\r\n  const [sunset, setSunset] = useState('-');\r\n  const [temp, setTemp] = useState('-');\r\n  const [weather, setWeather] = useState('-');\r\n  const location = 'Las PiÃ±as, PH';\r\n\r\n  const [avgCharging, setAvgCharging] = useState(0);\r\n  const [avgON, setAvgON] = useState(0);\r\n\r\n  const devices = [\r\n    { list: 'SL1', value: 'SL1', label: 'Streetlight 1' },\r\n    { list: 'SL2', value: 'SL2', label: 'Streetlight 2' },\r\n    { list: 'SL3', value: 'SL3', label: 'Streetlight 3' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    callWeatherAPI();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    AvgCharging();\r\n    AvgON();\r\n  }, [allData]);\r\n\r\n  const callWeatherAPI = () => {\r\n    console.log('Fetching Weather Data');\r\n    try {\r\n      setLoading(true);\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=14.4506&lon=120.9828&appid=a09978101e59b60cb76ea444b36760cc&units=metric`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // setFetchWeather(data);\r\n          setSunrise(formatTimestamp(data.sys.sunrise));\r\n          setSunset(formatTimestamp(data.sys.sunset));\r\n          setTemp(data.main.temp);\r\n          setWeather(data['weather'][0]['description']);\r\n        })\r\n        .catch(error => setError(error))\r\n        .finally(setLoading(false));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  function formatTimestamp(timestamp) {\r\n    const date = new Date(timestamp * 1000);\r\n    const formattedTime = date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\r\n    return formattedTime;\r\n  }\r\n\r\n  const GetEnergyYield = () => {\r\n    let energy = 0.0;\r\n    let totalEnergy = 0.0;\r\n    sameDateData.forEach(same => {\r\n      energy = energy + same.pv_power;\r\n    });\r\n    totalEnergy = (energy * 0.16667);\r\n    return (parseFloat(totalEnergy).toFixed(2));\r\n  }\r\n\r\n  const GetHighestYield = () => {\r\n    const byDateFilter = allData.reduce((acc, item) => {\r\n      const existingItem = acc.find((el) => el.date === item.date);\r\n      if (existingItem) {\r\n        existingItem.gen_power += parseFloat(item.pv_power) * 0.16667;\r\n      } else {\r\n        acc.push({ date: item.date, gen_power: item.pv_power * 0.16667 });\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const highestYield = byDateFilter.reduce((acc, curr) => Math.max(acc, curr.gen_power), Number.NEGATIVE_INFINITY);\r\n    return (parseFloat(highestYield).toFixed(2));\r\n  }\r\n\r\n  const AvgCharging = () => {\r\n    const chargingTimePerDay = allData.reduce((acc, item, index, array) => {\r\n      if (item.charging === 1) {\r\n        const nextItem = array[index + 1];\r\n        if (nextItem && nextItem.date === item.date && nextItem.charging === 0) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          // console.log(start);\r\n          const end = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          const chargingTime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          const existingItem = acc.find((el) => el.date === item.date);\r\n          if (existingItem) {\r\n            existingItem.charging_time += chargingTime;\r\n          } else {\r\n            acc.push({ date: item.date, charging_time: chargingTime });\r\n          }\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n    console.table(chargingTimePerDay);\r\n\r\n    const totalChargingTime = chargingTimePerDay.reduce((acc, curr) => acc + curr.charging_time, 0);\r\n    const averageChargingTime = totalChargingTime / chargingTimePerDay.length;\r\n\r\n    console.log(averageChargingTime);\r\n\r\n    setAvgCharging(parseFloat(averageChargingTime).toFixed(2));\r\n  }\r\n\r\n  const AvgON = () => {\r\n    const OnTimePerDay = allData.reduce((acc, item, index, array) => {\r\n      if (item.led_status === 1) {\r\n        const nextItem = array[index + 1];\r\n        if (nextItem && nextItem.date === item.date && nextItem.led_status === 1) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          const end = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          const ONtime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          const existingItem = acc.find((el) => el.date === item.date);\r\n          if (existingItem) {\r\n            existingItem.on_time += ONtime;\r\n          } else {\r\n            acc.push({ date: item.date, on_time: ONtime });\r\n          }\r\n        }\r\n        if (nextItem && nextItem.date === item.date && nextItem.led_status === 0) {\r\n          const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n          const start = new Date(`${dateISO}T${item.time}:00Z`);\r\n          const end = new Date(`${dateISO}T${nextItem.time}:00Z`);\r\n          const ONtime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n          const existingItem = acc.find((el) => el.date === item.date);\r\n          if (existingItem) {\r\n            existingItem.on_time += ONtime;\r\n          } else {\r\n            acc.push({ date: item.date, on_time: ONtime });\r\n          }\r\n        }\r\n      }\r\n\r\n      // if (item.led_status === 0) {\r\n      //   const prevItem = array[index - 1];\r\n      //   // const nextItem = array[index + 1];\r\n      //   if (prevItem && prevItem.date !== item.date && prevItem.led_status === 1) {\r\n      //     const dateISO = new Date(item.date).toISOString().split('T')[0];\r\n      //     const start = new Date(`${dateISO}T00:00:00Z`);\r\n      //     const end = new Date(`${dateISO}T${item.time}:00Z`);\r\n      //     const ONtime = (end - start) / (1000 * 60 * 60); // convert milliseconds to hours\r\n      //     const existingItem = acc.find((el) => el.date === item.date);\r\n      //     if (existingItem) {\r\n      //       existingItem.on_time += ONtime;\r\n      //     } else {\r\n      //       acc.push({ date: item.date, on_time: ONtime });\r\n      //     }\r\n      //   }\r\n      // }\r\n\r\n      return acc;\r\n    }, []);\r\n    console.table(OnTimePerDay);\r\n\r\n    const totalOnTime = OnTimePerDay.reduce((acc, curr) => acc + curr.on_time, 0);\r\n    const averageOnTime = totalOnTime / OnTimePerDay.length;\r\n\r\n    console.log(averageOnTime);\r\n\r\n    setAvgON(parseFloat(averageOnTime).toFixed(2))\r\n  }\r\n\r\n  return (\r\n    <div className='overview-container'>\r\n      {loading ? <ReactLoading type={'spokes'} color={'#0f1b2a'} height={550} width={375} className='loading-api' /> : ''}\r\n      <div className=''>\r\n        <h3 className='my-0'>System Overview</h3>\r\n      </div>\r\n\r\n      <div className='overview-container-wrapper'>\r\n        {/** Left side of the screen section*/}\r\n        <div className='sl-overview-container'>\r\n\r\n          <div className='sl-wrapper mb-3'>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaSolarPanel className='sl-icon' />\r\n                <h3>{GetEnergyYield()}Wh</h3>\r\n                <p>Current Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <GiSolarPower className='sl-icon' />\r\n                <h3>{GetHighestYield()}Wh</h3>\r\n                <p>Highest Yield</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <FaCarBattery className='sl-icon' />\r\n                <h3>{data.battCapacity}</h3>\r\n                <p>Battery Capacity</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='sl-wrapper'>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoBatteryCharging className='sl-icon' />\r\n                <h3>{avgCharging}hr</h3>\r\n                <p>Avg. Charging Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <TbBulb className='sl-icon' />\r\n                <h3>{avgON}hr</h3>\r\n                <p>Avg. ON Time</p>\r\n              </div>\r\n            </div>\r\n            <div className='sl-overview-card'>\r\n              <div className='card-content'>\r\n                <IoIosBulb className='sl-icon' />\r\n                <h3>{data.lamp}</h3>\r\n                <p>LED Lamp</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/** Right side of the screen section*/}\r\n\r\n        <div className='sl-temp-container'>\r\n          {/** Details for temp and time section*/}\r\n          <div className='sl-wrapper'>\r\n            <div className='weather-wrapper'>\r\n              <div className='icon-wrapper'>\r\n                <BiCloud className='weather-icon' />\r\n              </div>\r\n\r\n              \r\n              <div className='temp-container'>\r\n                <h2 className='temp-value'>{temp}Â°C</h2>\r\n                <h2 className='device-title'>{location}</h2>\r\n                <h6><i>{weather}</i></h6>\r\n                {/* <p>{location}</p> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='weather-container'>\r\n            <div className=\"overview-content-container sunrise-container\">\r\n              <div className=\"content-wrap\">\r\n                <div className=\"icon-wrapper\">\r\n                  <BsSunrise className=\"s-icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"content-wrap\">\r\n                <h2 className=\"sunrise-value\">{sunrise}</h2>\r\n                <h6>(GMT+8)</h6>\r\n                <p>Sunrise</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"overview-content-container sunset-container\">\r\n              <div className=\"content-wrap\">\r\n                <div className=\"icon-wrapper\">\r\n                  <BsSunset className=\"s-icon\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"content-wrap\">\r\n                <h2 className=\"sunset-value\">{sunset}</h2>\r\n                <h6>(GMT+8)</h6>\r\n                <p>Sunset</p>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/** Details for devices and location section*/}\r\n          <div className='dv-container'>\r\n            <div>\r\n              <h2 className='device-title'>Location</h2>\r\n              <p className='location-txt'>{data.location}</p>\r\n            </div>\r\n\r\n          </div> \r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default memo(Overview);"],"names":["Overview","props","setHumidityValue","useState","loading","setLoading","setError","data","selectedSL","sameDateData","sameDate","allData","sunrise","setSunrise","sunset","setSunset","temp","setTemp","weather","setWeather","avgCharging","setAvgCharging","avgON","setAvgON","useEffect","callWeatherAPI","AvgCharging","AvgON","console","log","fetch","then","response","json","formatTimestamp","sys","main","catch","error","finally","timestamp","Date","toLocaleTimeString","hour","minute","chargingTimePerDay","reduce","acc","item","index","array","charging","nextItem","date","dateISO","toISOString","split","start","time","chargingTime","existingItem","find","el","charging_time","push","table","averageChargingTime","curr","length","parseFloat","toFixed","OnTimePerDay","led_status","ONtime","on_time","averageOnTime","className","type","color","height","width","energy","forEach","same","pv_power","GetEnergyYield","highestYield","gen_power","Math","max","Number","NEGATIVE_INFINITY","GetHighestYield","battCapacity","lamp","location","memo"],"sourceRoot":""}