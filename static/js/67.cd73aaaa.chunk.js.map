{"version":3,"file":"static/js/67.cd73aaaa.chunk.js","mappings":"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","sources":["components/status.js"],"sourcesContent":["import React, { useState, memo, useEffect } from 'react';\r\nimport { FaSolarPanel, FaBatteryFull, FaBatteryThreeQuarters, FaBatteryHalf, FaBatteryQuarter, FaBatteryEmpty } from \"react-icons/fa\";\r\nimport { BsLightningChargeFill, BsThermometerSun, BsSunFill, BsFillMoonStarsFill } from \"react-icons/bs\";\r\nimport { TbBulbOff, TbBulb } from \"react-icons/tb\";\r\nimport { WiHumidity, WiDaySunny, WiDayCloudy } from \"react-icons/wi\";\r\nimport { IoBatteryCharging, IoCloudyNight } from \"react-icons/io5\";\r\nimport { IoMdSunny } from \"react-icons/io\";\r\nimport { MdWbTwilight, MdSignalCellular1Bar, MdSignalCellular2Bar, MdOutlineSignalCellular4Bar, MdSignalCellularConnectedNoInternet1Bar, MdSignalCellularConnectedNoInternet3Bar } from \"react-icons/md\";\r\n// Direct Sunlight (Sunny): IoMdSunny\r\n// Ambient Daylight: WiDaySunny\r\n// Overcast Daylight (Cloudy):WiDayCloudy\r\n// Twilight: TbSunset2\r\n// Moonlight (Full moon): BsFillMoonStarsFill\r\n// Cloudy Night: IoCloudyNight\r\n\r\n//Battery Charging: IoBatteryCharging\r\n//Battery 100%: FaBatteryFull\r\n//Battery 75% FaBatteryThreeQuarters\r\n//Battery 50%: FaBatteryHalf\r\n//Battery 25%: FaBatteryQuarter\r\n//Battery 0%: FaBatteryEmpty\r\n\r\nfunction Status(props) {\r\n  const data = props.data;\r\n  const sameDateData = props.sameDate;\r\n  const battPercent = data.batt_level;\r\n  const [battColor, setBattColor] = useState('');\r\n  const [humidity, setHumidity] = useState('-');\r\n\r\n  useEffect(() => {\r\n    callWeatherAPI();\r\n  }, [data]);\r\n\r\n  const callWeatherAPI = () => {\r\n    try {\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=14.4506&lon=120.9828&appid=a09978101e59b60cb76ea444b36760cc&units=metric`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setHumidity(data.main.humidity);\r\n        })\r\n        .catch(error => console.log(error));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  const BattStatusIcon = () => {\r\n    if (data.charging === 1) {\r\n      setBattColor('status-card battFull');\r\n      return <IoBatteryCharging className='status-icon' />\r\n    } else {\r\n      if (battPercent >= 76) {\r\n        setBattColor('status-card battFull');\r\n        return <FaBatteryFull className='status-icon' />\r\n      } else if (battPercent >= 51 && battPercent <= 75) {\r\n        setBattColor('status-card battSafe');\r\n        return <FaBatteryThreeQuarters className='status-icon' />\r\n      } else if (battPercent >= 26 && battPercent <= 50) {\r\n        setBattColor('status-card battMid');\r\n        return <FaBatteryHalf className='status-icon' />\r\n      } else if (battPercent >= 1 && battPercent <= 25) {\r\n        setBattColor('status-card battDanger');\r\n        return <FaBatteryQuarter className='status-icon' />\r\n      } else {\r\n        setBattColor('status-card battDanger');\r\n        return <FaBatteryEmpty className='status-icon' />\r\n      }\r\n    }\r\n  };\r\n\r\n  const LampStatusIcon = () => {\r\n    if (parseFloat(data.led_status) === 1) {\r\n      return <div className='status-card lampON'>\r\n        <TbBulb className='status-icon' />\r\n        <h2>ON</h2>\r\n        <h5>LED Lamp</h5>\r\n      </div>\r\n    }\r\n    if (parseFloat(data.led_status) === 0) {\r\n      return <div className='status-card lampOFF'>\r\n        <TbBulbOff className='status-icon' />\r\n        <h2>OFF</h2>\r\n        <h5>LED Lamp</h5>\r\n      </div>\r\n    }\r\n  }\r\n\r\n  const GetEnergyYield = () => {\r\n    let energy = 0.0;\r\n    let totalEnergy = 0.0;\r\n    sameDateData.forEach(same => {\r\n      energy = energy + same.pv_power;\r\n    });\r\n    totalEnergy = (energy * 0.08333);\r\n    return (parseFloat(totalEnergy).toFixed(2));\r\n  }\r\n\r\n  // Get the current time\r\n  const currentTime = new Date();\r\n\r\n  // Extract the hour and minute components from the current time\r\n  const currentHour = currentTime.getHours();\r\n  const currentMinute = currentTime.getMinutes();\r\n\r\n  // Split the lastTime string into hour and minute components\r\n  const [lastHour, lastMinute] = data.time.split(':').map(Number);\r\n\r\n  // Calculate the time difference in minutes\r\n  const timeDifference = (currentHour - lastHour) * 60 + (currentMinute - lastMinute);\r\n\r\n  const hoursDifference = Math.floor(timeDifference / 60);\r\n  const minutesDifference = timeDifference % 60;\r\n  let HRlabel = \" hr \";\r\n  let MINlabel = \" min \";\r\n  if (hoursDifference > 1) {\r\n    HRlabel = \" hrs \";\r\n  } else {\r\n    HRlabel = \" hr \";\r\n  }\r\n  if (minutesDifference > 1) {\r\n    MINlabel = \" mins ago.\";\r\n  } else {\r\n    MINlabel = \" min ago.\"\r\n  }\r\n\r\n  const GetLastUpdate = () => {\r\n    let active = \"Inactive\";\r\n    if (currentTime.toLocaleString(\"en-US\", { month: \"long\", day: 'numeric', year: 'numeric' }) === data.date) {\r\n      if (data.pv_power > 0.0 || data.charging === 1.0 || data.led_status === 1.0) {\r\n        active = \"Active\";  \r\n      }\r\n    }\r\n    \r\n    return <div className='d-flex align-items-center gap-2 my-2'>\r\n      <div className={active === \"Active\" ? 'sl-status sl-active' : 'sl-status sl-inactive'}> - </div>\r\n      {currentTime.toLocaleString(\"en-US\", { month: \"long\", day: 'numeric', year: 'numeric' }) === data.date ?\r\n        timeDifference > 60 ?\r\n          <h6 className='my-0'>{active + \" | Last update \" + hoursDifference + HRlabel + minutesDifference + MINlabel}</h6> :\r\n          <h6 className='my-0'>{active + \" | Last update \" + timeDifference + MINlabel}</h6>\r\n        : <h6 className='my-0'>{active + \" | Last update \" + data.date}</h6>\r\n      }\r\n    </div>\r\n  }\r\n\r\n  const SignalStrength = () => {\r\n    let strength;\r\n    if (parseFloat(data.rssi) > -115) {\r\n      if (parseFloat(data.snr) > -7) {\r\n        strength = \"Good\";\r\n      }\r\n      if (parseFloat(data.snr) <= -13) {\r\n        strength = \"Noisy environment\";\r\n      }\r\n    }\r\n    if (parseFloat(data.rssi) <= -120) {\r\n      if (parseFloat(data.snr) > -7) {\r\n        strength = \"Too far away\";\r\n      }\r\n      if (parseFloat(data.snr) <= -13) {\r\n        strength = \"Bad\";\r\n      }\r\n    }\r\n    if (parseFloat(data.rssi) < -115 && parseFloat(data.rssi) > -120) {\r\n      strength = \"Fair\";\r\n    }\r\n\r\n    switch (strength) {\r\n      case 'Bad':\r\n        return <div className='status-card signal-bad'>\r\n          <MdSignalCellular1Bar className='status-icon' />\r\n          <h6><i>{strength}</i></h6>\r\n          <h5>Signal Strength</h5>\r\n        </div>\r\n      case 'Fair':\r\n        return <div className='status-card signal-fair'>\r\n          <MdSignalCellular2Bar className='status-icon' />\r\n          <h6><i>{strength}</i></h6>\r\n          <h5>Signal Strength</h5>\r\n        </div>\r\n      case 'Good':\r\n        return <div className='status-card signal-good'>\r\n          <MdOutlineSignalCellular4Bar className='status-icon' />\r\n          <h6><i>{strength}</i></h6>\r\n          <h5>Signal Strength</h5>\r\n        </div>\r\n      case 'Noisy environment':\r\n        return <div className='status-card signal-noisy'>\r\n          <MdSignalCellularConnectedNoInternet3Bar className='status-icon' />\r\n          <h6><i>{strength}</i></h6>\r\n          <h5>Signal Strength</h5>\r\n        </div>\r\n      case 'Too far away':\r\n        return <div className='status-card signal-far'>\r\n          <MdSignalCellularConnectedNoInternet1Bar className='status-icon' />\r\n          <h6><i>{strength}</i></h6>\r\n          <h5>Signal Strength</h5>\r\n        </div>\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const AmbientLight = () => {\r\n    let luxDesc;\r\n    let luxIcon;\r\n    if (parseFloat(data.lux) >= 32000) {\r\n      luxDesc = \"Direct Sunlight\";\r\n      luxIcon = <IoMdSunny className='status-icon' />;\r\n    } else if (parseFloat(data.lux) >= 10000) {\r\n      luxDesc = \"Ambient Sunlight\";\r\n      luxIcon = <WiDaySunny className='status-icon' />;\r\n    } else if (parseFloat(data.lux) >= 1000) {\r\n      luxDesc = \"Overcast Sunlight\";\r\n      luxIcon = <WiDayCloudy className='status-icon' />;\r\n    } else if (parseFloat(data.lux) >= 400) {\r\n      luxDesc = \"Twilight\";\r\n      luxIcon = <MdWbTwilight className='status-icon' />;\r\n    } else if (parseFloat(data.lux) >= 1) {\r\n      luxDesc = \"Moonlight\";\r\n      luxIcon = <BsFillMoonStarsFill className='status-icon' />;\r\n    } else if (parseFloat(data.lux) < 1) {\r\n      luxDesc = \"Night\";\r\n      luxIcon = <IoCloudyNight className='status-icon' />;\r\n    }\r\n\r\n    return <div className='status-card'>\r\n      {luxIcon}\r\n      <h6><i>{luxDesc}</i></h6>\r\n      <h5>Ambient Light</h5>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div className='status-container'>\r\n      <div className='d-flex align-items-center my-0'>\r\n        <h3 className='my-0'>System Status</h3>\r\n      </div>\r\n      <GetLastUpdate />\r\n\r\n      {/**Status Cards Section */}\r\n      <div className='status-section'>\r\n        <div className='status-cards-container'>\r\n          {/**1st row cards */}\r\n          <div className='cards-row d-flex justify-content-center gap-4 my-4'>\r\n            <div className='status-card'>\r\n              <FaSolarPanel className='status-icon' />\r\n              <h2>{parseFloat(data.pv_power)}W</h2>\r\n              <h5>Current Power</h5>\r\n            </div>\r\n\r\n            <div className='status-card'>\r\n              <BsLightningChargeFill className='status-icon' />\r\n              <h2>{GetEnergyYield()}Wh</h2>\r\n              <h5>Energy Yield</h5>\r\n            </div>\r\n\r\n            <div className={battColor}>\r\n              {/* <FaBatteryThreeQuarters className='status-icon'/> */}\r\n              <BattStatusIcon />\r\n              <h2>{battPercent}%</h2>\r\n              <h5>Battery</h5>\r\n            </div>\r\n            <LampStatusIcon />\r\n          </div>\r\n\r\n          {/**2nd row cards */}\r\n          <div className='cards-row d-flex justify-content-between gap-4'>\r\n            <div className='status-card'>\r\n              <BsThermometerSun className='status-icon' />\r\n              <h2>{parseFloat(data.temp)}°C</h2>\r\n              <h5>Ambient Temperature</h5>\r\n            </div>\r\n\r\n            <div className='status-card'>\r\n              <WiHumidity className='status-icon' />\r\n              <h2>{humidity}%</h2>\r\n              <h5>Humidity</h5>\r\n            </div>\r\n\r\n            <AmbientLight />\r\n\r\n            <SignalStrength />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Status);"],"names":["Status","props","data","sameDateData","sameDate","battPercent","batt_level","useState","battColor","setBattColor","humidity","setHumidity","useEffect","callWeatherAPI","fetch","then","response","json","main","catch","error","console","log","BattStatusIcon","charging","className","LampStatusIcon","parseFloat","led_status","currentTime","Date","currentHour","getHours","currentMinute","getMinutes","time","split","map","Number","timeDifference","hoursDifference","Math","floor","minutesDifference","HRlabel","MINlabel","GetLastUpdate","active","toLocaleString","month","day","year","date","pv_power","SignalStrength","strength","rssi","snr","AmbientLight","luxDesc","luxIcon","lux","energy","forEach","same","toFixed","GetEnergyYield","temp","memo"],"sourceRoot":""}