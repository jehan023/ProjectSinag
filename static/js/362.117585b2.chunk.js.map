{"version":3,"file":"static/js/362.117585b2.chunk.js","mappings":"oKAiEA,UA9DA,WAEE,OAAwBA,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA4BF,EAAAA,EAAAA,YAAU,eAA/BG,EAAM,KAAEC,EAAS,KACxB,GAA0BJ,EAAAA,EAAAA,UAAS,SAAQ,eAApCK,EAAK,KAAEC,EAAQ,KACtB,GAA0BN,EAAAA,EAAAA,UAAS,MAAK,eAA5B,KAAU,MAEtBO,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,UACd,GAAG,CAACR,EAAME,IAEV,IAAMO,EAAqB,SAACC,EAAUC,GAEpCV,EAAQS,GACRP,EAAUQ,GAEV,IAAMX,EAAOU,EACPR,EAASS,EAIfC,EAAAA,EAAAA,IAFS,mHAGG,CACRC,OAAQ,CACNC,MAAOd,EACPe,KAAMb,KAGTc,MAAK,SAAAC,GACJZ,EAASY,EAASC,MAClBX,QAAQC,IAAIS,EAASC,KACvB,IACCC,OAAM,SAAAC,GACLb,QAAQa,MAAM,sBAAuBA,EACvC,GACJ,EAGA,OACE,iBAAKC,UAAU,kBAAiB,UAAC,OAE/B,iBAAKA,UAAU,iCAAgC,WAC7C,mBAAQA,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,QAC5I,mBAAQY,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,WACxI,OAEN,iBAAKY,UAAU,iCAAgC,WAC7C,mBAAQA,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,QAC5I,mBAAQY,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,WACxI,OAEN,iBAAKY,UAAU,iCAAgC,WAC7C,mBAAQA,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,QAC5I,mBAAQY,UAAqB,QAATrB,GAA6B,IAAXE,EAAgB,qBAAuB,aAAcoB,QAAS,WAAQb,EAAmB,MAAO,EAAG,EAAE,SAAC,YAE9I,0BACE,cAAGY,UAAU,OAAM,SAAEjB,QAI7B,C","sources":["components/sinag.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Sinag() {\r\n\r\n  const [node, setNode] = useState('');\r\n  const [status, setStatus] = useState();\r\n  const [reply, setReply] = useState('reply')\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Refresh');\r\n  }, [node, status]);\r\n\r\n  const handleToggleButton = (receiver, state) => {\r\n\r\n    setNode(receiver);\r\n    setStatus(state);\r\n\r\n    const node = receiver; // Replace with the value you want to send\r\n    const status = state; // Replace with the value you want to send\r\n\r\n    const url = `https://script.google.com/macros/s/AKfycbzXBBvYEBML4imYCT_Q2WBUNZB6G5LbivqAF6JVdCD_xarVsfglnTZ64foGqhjQHVRp/exec`;\r\n\r\n    axios\r\n      .get(url, {\r\n        params: {\r\n          fnode: node,\r\n          fled: status,\r\n        },\r\n      })\r\n      .then(response => {\r\n        setReply(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error sending data:', error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='sinag-container'>\r\n      SL1\r\n      <div className='sl-btn-wrapper d-flex flex-row'>\r\n        <button className={(node === 'SL1' && status === 1) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL1', 1) }}>ON</button>\r\n        <button className={(node === 'SL1' && status === 0) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL1', 0) }}>OFF</button>\r\n      </div>\r\n      SL2\r\n      <div className='sl-btn-wrapper d-flex flex-row'>\r\n        <button className={(node === 'SL2' && status === 1) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL2', 1) }}>ON</button>\r\n        <button className={(node === 'SL2' && status === 0) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL2', 0) }}>OFF</button>\r\n      </div>\r\n      SL3\r\n      <div className='sl-btn-wrapper d-flex flex-row'>\r\n        <button className={(node === 'SL3' && status === 1) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL3', 1) }}>ON</button>\r\n        <button className={(node === 'SL3' && status === 0) ? 'led-button pressed' : 'led-button'} onClick={() => { handleToggleButton('SL3', 0) }}>OFF</button>\r\n      </div>\r\n      <div>\r\n        <p className='mt-3'>{reply}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sinag;"],"names":["useState","node","setNode","status","setStatus","reply","setReply","useEffect","console","log","handleToggleButton","receiver","state","axios","params","fnode","fled","then","response","data","catch","error","className","onClick"],"sourceRoot":""}